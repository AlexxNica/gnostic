// Copyright 2018 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/any.proto";

package gnostic.service.v1;

// This option lets the proto compiler generate Java code inside the package
// name (see below) instead of inside an outer class. It creates a simpler
// developer experience by reducing one-level of name nesting and be
// consistent with most programming languages that don't support outer classes.
option java_multiple_files = true;

// The Java outer classname should be the filename in UpperCamelCase. This
// class is only used to hold proto descriptor, so developers don't need to
// work with it directly.
option java_outer_classname = "GnosticService";

// The Java package name must be proto package name with proper prefix.
option java_package = "org.gnostic.v1";

// A reasonable prefix for the Objective-C symbols generated from the package.
// It should at a minimum be 3 characters long, all uppercase, and convention
// is to use an abbreviation of the package name. Something short, but
// hopefully unique enough to not conflict with things that may come along in
// the future. 'GPB' is reserved for the protocol buffer implementation itself.
//
option objc_class_prefix = "GNO";

message PostModelRequest {
	bytes model = 1;
}

message PostModelResponse{
	string id = 1;
}

message GetModelRequest {
	string id = 1;
}

message GetModelResponse{
	google.protobuf.Any model = 1;
}

message DeleteModelRequest {
	string id = 1;
}

message DeleteModelResponse{
}

message ListModelRequest {
}

message ListModelResponse{
	repeated string ids = 1;
}

message ValidateRequest {
}

message ValidateResponse{
}

message CheckRequest {
}

message CheckResponse{
}

message GenerateRequest {
}

message GenerateResponse{
}

service Gnostic {
  // Publish an API model, returning a URL and a management token.
  rpc PostModel(PostModelRequest) returns (PostModelResponse) {}
  
  // Get a published API model.
  rpc GetModel(GetModelRequest) returns (GetModelResponse) {}
  
  // Remove a published API model.
  rpc DeleteModel(DeleteModelRequest) returns (DeleteModelResponse) {}
  
  // List API models published by this service.
  rpc ListModels(ListModelRequest) returns (ListModelResponse) {}
  
  // Validate an API model.
  rpc Validate(ValidateRequest) returns (ValidateResponse) {}
  
  // Check an API model with one or more linters.
  rpc Check(CheckRequest) returns (CheckResponse) {}
  
  // Generate API-related code.
  rpc Generate(GenerateRequest) returns (GenerateResponse) {}
}



